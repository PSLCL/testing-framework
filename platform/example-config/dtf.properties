### DTF Runner Service Configuration ###

# Copy this configuration file to the testing-framework/platform/config directory and make any necessary changes. Uncommented lines are
# required and must be configured before the test runner service will function correctly.

### LOGGING ###

#
# The file path to which the example logback.xml file is configured to log.
#
pslcl.dtf.log-file-path=log/dtfrunner.log

### TESTING FRAMEWORK PORTAL ###

#
# The hostname of the testing framework portal.
#
pslcl.dtf.portal.host=



### DTF RUNNER ###

#
# The simultaneous test-instance limit
# negative number: no limit
# 0: interprets as 1
#
pslcl.dtf.runner.test-instance-limit=



### MESSAGE QUEUE ###

#
# Name of the message queue used to deliver test run requests.
#
pslcl.dtf.runner.msg-queue-name=

#
# The message queue implementation.
#
#pslcl.dtf.resource.mq-class=com.pslcl.dtf.resource.aws.Sqs



### BLOCKING EXECUTOR QUEUE ###

# pslcl.common.executor.core-size=128
# pslcl.common.executor.max-pool-size=128
# pslcl.common.executor.max-blocking-time=120000
# pslcl.common.executor.thread-name=PslclBlockingExecutor
# pslcl.common.executor.keep-alive-delay=120000
# pslcl.common.executor.core-timeout=true
# pslcl.common.executor.status-name=PslclBlockingExecutor



### MYSQL ###

#
# The hostname and user credentials for the mysql database.
#
pslcl.dtf.db.host=
pslcl.dtf.db.user=
pslcl.dtf.db.password=



### STAF ###

#
# Verify that staf is running on the test runner service machine with a staf local ping command.
#
#pslcl.dtf.staf.local-ping=true



### RESOURCE PROVIDERS ###

#
# Specify the system identifier. This should be a unique identifier(within your organization) for this deployment of the testing framework.
# It may be used by resource providers in order to safely identify resources which can be deleted.
#
pslcl.dtf.system-id=


#
# Resource Manager Implementation. Multiple resource managers may be specified by incrementing the number at the end if the property key.
#
#pslcl.dtf.resource.resource-manager-class0=com.pslcl.dtf.resource.aws.AwsResourcesManager
#pslcl.dtf.resource.resource-manager-class1=



### MACHINE INSTANCE DEFAULTS ###

# The default machine instance properties. These may be overriden in the individual resource provider configuration or
# by specifying any of the following properties as attributes in the bind machine command in a test generator.

#
# Default minimum number of CPU cores. If a single value is specified, the returned instance must have at least the specified number of cores.
# A range may also be specified to set a maximum on the number of cores. e.g. setting the number of cores to 1-2 will request a machine instance
# with at least 1 cpu core but no more than 2.
#
#pslcl.dtf.resource.machine.cores=1

#
# Default minimum system memory(GB). If a single value is specified, the returned instance must have at least the specified amount of system memory.
# A range may also be specified to set a maximum on the amount of system memory. e.g. setting the memory size to 2-4 will request a machine instance
# with at least 2 GB of memory but no more than 4.
#
#pslcl.dtf.resource.machine.memory-size=2.0

#
# Default minimum disk size(GB). If a single value is specified, the returned instance must have at least the specified amount of disk space.
# A range may also be specified to set a maximum on the amount of disk space. e.g. setting the disk size to 8.0-16.0 will request a machine instance
# with at least 8 GB of disk space but no more than 16.
#
#pslcl.dtf.resource.machine.disk-size=8.0

#
# Default Operating System
#
#pslcl.dtf.resource.machine.os=linux

#
# Default image to use for machine instances. This image will be used if no other attributes are specified.
# e.g. AWS AMI ID or Docker image ID
#
pslcl.dtf.resource.machine.image-id=



### PERSON INSTANCE DEFAULTS ###

#
# The default email address to send inspect messages. Must be one of the configured inspectors(see pslcl.dtf.inspect.inspector).  If not set,
# the resource provider will select a person from one of the configured inspectors. May be overriden by specifying the following property as an attributes
# in the bind person command in a test generator.
#
#pslcl.dtf.resource.person.email=



### MACHINE INSTANCE IMAGES ###

# Machine instance image configuration provides the resource provider with a list of images and attributes describing each image. Attributes may be specified in
# the bind command of a test generator in order to specify an image with particular attributes.
#
# The order configured here is the priority used by the resource provider for selecting a matching image. The Resource Provider will select the first image with at
# least those attributes specified in the bind command.
#
# image-id and the pslcl.dtf.resource.machine.os attributes are required. Custom attributes may also be included.
#
# pslcl.dtf.resource.machine.image.config<#>=<image-id> pslcl.dtf.resource.machine.os=<windows/linux> [custom1=value1 custom2=value2]
#
# e.g. pslcl.dtf.resource.machine.image.config0=ami-315b7e5b pslcl.dtf.resource.machine.os=linux jre=1.8 platform=x86_64-amzn1-linux-gnu
#pslcl.dtf.resource.machine.image.config0=
#pslcl.dtf.resource.machine.image.config1=



### DEPLOY ###

#
# The path where temporary files used by tests are stored on machine instances.
#
#pslcl.dtf.deploy.linux-sandbox-path=/opt/dtf/sandbox
#pslcl.dtf.deploy.win-sandbox-path=c:\\opt\\dtf\\sandbox



### INSPECT ###

#
# The email address to use as the sender for inspect messages.
#
pslcl.dtf.inspect.sender=

#
# The email address to use for replies to the inspect messages.
#
pslcl.dtf.inspect.reply=

#
# The inspect message subject
#
#pslcl.dtf.inspect.subject=DTF-Inspect

#
# The email addresses to which inspect messages should be sent. A specific inspector may be used by including the pslcl.dtf.resource.person.email attributes
# in the bind person command in the test generator. If the pslcl.dtf.resource.person.email attribute is not set, the resource provider will select an inspector
# from the following list using a round robin method to distribute inspect messages.
#
pslcl.dtf.inspect.inspector0=
#pslcl.dtf.inspect.inspector1=



### AWS RESOURCE PROVIDER###

# The following configuration is specific to the AWS resource provider. The following keys/default values can be found in the dtf-aws-resource module's
# com.pslcl.dtf.resource.aws.attr.ProviderNames.java file.

#
# Prefix to use on any aws resources that can be identified by name.
#
#pslcl.dtf.aws.resource.prefix-name=dtf

#
# Specify the amount of time, in minutes, to wait a multiple of before terminating an ec2 instances. The default value is
# 60 minutes. Once no longer needed by a test, an instance will be terminated no later than next multiple of 60 minutes has passed since
# the instance was launched.
#
#pslcl.dtf.aws.ec2instance.stall-release=60
#pslcl.dtf.aws.request-throttle=60


### AWS INSTANCE TYPES ###

# AWS instance type configuration provides the aws resource provider with a list of available instance types and specific attributes describing each instance type.
# Attributes may be specified in the bind machine command of a test generator in order to specify an instance type with particular attributes.
#
# The following attributes are configured as part of the following mappings:
#
# pslcl.dtf.resource.machine.cores
# pslcl.dtf.resource.machine.memory-size
#
# A limit on the number of instances of each type that may be running simultaneously is also configured.
#
# The order configured here is the priority used by the resource provider for selecting a matching instance type. The Resource Provider will select the first available
# instance type with at least those attributes specified in the bind command.
#
# pslcl.dtf.aws.instance.map<#>=<cores> <memory-size> <instance type name> <instance limit>
pslcl.dtf.aws.instance.map0=1 1.0 t2.micro 20
pslcl.dtf.aws.instance.map1=1 2.0 t2.small 10
pslcl.dtf.aws.instance.map2=1 3.75 m3.medium 10
pslcl.dtf.aws.instance.map3=2 8.0 m4.large 5

#
# If no attributes are specified relevant to instance type, the following instance type is used by default.
#
#pslcl.dtf.aws.instance.type=m3.medium
#pslcl.dtf.aws.image.architecture=x86_64
#pslcl.dtf.aws.image.hypervisor=xen
#pslcl.dtf.aws.image.image-type=machine
#pslcl.dtf.aws.image.root-dev-type=ebs
#pslcl.dtf.aws.image.state=available
#pslcl.dtf.aws.image.platform=



### AWS SES CLIENT ###

#
# The AWS SES client configuration
#
#pslcl.dtf.aws.client.ses.region=us-west-2
#pslcl.dtf.aws.client.ses.endpoint=email.us-west-2.amazonaws.com
#pslcl.dtf.aws.client.ses.avail-zone=us-west-2a

#
# The maximum number of retries and maximum delay between each retry.
#
#pslcl.dtf.aws.ses.max-delay=5000
#pslcl.dtf.aws.ses.max-retries=17



### AWS EC2 CLIENT ###

#
# The AWS EC2 client configuration
#
#pslcl.dtf.aws.client.ec2.region=us-west-2
#pslcl.dtf.aws.client.ec2.endpoint=ec2.us-west-2.amazonaws.com
#pslcl.dtf.aws.client.ec2.avail-zone=us-west-2a



### AWS SQS CLIENT ###

#
# The AWS SQS client configuration
#
#pslcl.dtf.aws.client.sqs.region=us-west-2
#pslcl.dtf.aws.client.sqs.endpoint=sqs.us-west-2.amazonaws.com
#pslcl.dtf.aws.client.sqs.avail-zone=us-west-2a



### AWS EC2 INSTANCE ###

#
# The name of the keypair to use when launching the ec2 instance
#
pslcl.dtf.aws.ec2instance.keypair-name=

#
# The ec2 instance user data
#
#pslcl.dtf.aws.ec2instance.linux-user-data=#!/bin/bash\n/usr/local/staf/startSTAFProc.sh
#pslcl.dtf.aws.ec2instance.win-user-data=<script>\\STAF\\startSTAFProc.bat</script>

#
# The ec2 instance IAM Role
#
#pslcl.dtf.aws.ec2instance.iam-arn=
#pslcl.dtf.aws.ec2instance.iam-name=

#
# Minimum amount of time that an instance should be up before termination.
#
#pslcl.dtf.aws.ec2instance.stall-release=50



### AWS SECURITY GROUPS ###

# Instances launched into ec2 by the test runner service require ports 6500 and 6550 to be open to enable STAF communcation between
# the service and the test instances.
#
# Set this property to specify the security group that should be assigned to launched ec2 instances. If this property is not set,
# ec2 instances will be luanched using the default security group for the VPC.
#
#pslcl.dtf.aws.ec2instance.sg.group-id=

#
# The maximum number of retries and maximum delay between each retry.
#
#pslcl.dtf.aws.ec2instance.sg.max-delay=5000
#pslcl.dtf.aws.ec2instance.sg.max-retries=17


### AWS VPC ###

#
# If you created your AWS account before 2013-12-04 you will need to
# manually create a VPC and set its ID in pslcl.dtf.aws.ec2instance.vpc.id
# otherwise, you can use this key to override the region default.
#

#pslcl.dtf.aws.ec2instance.vpc.id=
#pslcl.dtf.aws.ec2instance.vpc.max-delay=5000
#pslcl.dtf.aws.ec2instance.vpc.max-retries=17


### AWS SUBNET ###

#pslcl.dtf.aws.ec2instance.subnet.size=16
#pslcl.dtf.aws.ec2instance.subnet.name=dtf-10.0.0.0/28
#pslcl.dtf.aws.ec2instance.subnet.cidr=10.0.0.0/28
#pslcl.dtf.aws.ec2instance.subnet.vpc-name=dtf-10.0.0.0/28

### S3 logging capture ###

#
# example: 
# s3-bucket=dtf-staf-logging
# The src-folder is relative to the configured sandbox.  In the case of a fully
# distinguished execution path command, where the configured sandboxes are not
# used, the penultimate execution path is considered the sandbox and the src-folder
# will be created there.
#
pslcl.dtf.aws.ec2instance.logging.s3-bucket=
#pslcl.dtf.aws.ec2instance.logging.src-folder=logs

