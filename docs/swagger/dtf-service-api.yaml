swagger: '2.0'
info:
  title: Distributed Test Framework Service Web API
  description: TODO
  license:
    name: TODO
    url: https://github.com/PSLCL/testing-framework
  version: '1.0'
host: ec2-34-232-157-150.compute-1.amazonaws.com
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /api/v1/stats:
    get:
      tags:
      - DTF
      summary: >
        Get the statistics of the service.
      operationId: getStats
      responses:
        200:
          description: The statistics object.
          schema:
            $ref: '#/definitions/Statistics'
        401:
          description: Bad or expired token
          schema:
            $ref: '#/definitions/OAuth2Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/OAuth2Error'
        500:
          description: An unexpected service error occurred
          schema:
            $ref: "#/definitions/Error"
      security:
      - AccessToken:
        - dtf_read

  /api/v1/runrates:
    get:
      tags:
      - DTF
      summary: >
        Get the run rates.
      operationId: getRunRates
      parameters:
      - name: from
        in: query
        description: >
          The starting date/time in seconds.  Defaults to current time minus one week.
        required: false
        type: integer
        format: int64
      - name: to
        in: query
        description: >
          The ending date/time in seconds.  Defaults to current time.
        required: false
        type: integer
        format: int64
      - name: bucket
        in: query
        description: The modulus to apply to and subtract from the 'from' and 'to' values.  Defaults to 3600 (1 hour).
        required: false
        type: integer
        format: int64
      responses:
          200:
            description: The run rates.
            schema:
              $ref: '#/definitions/RunRates'
          401:
            description: Bad or expired token
            schema:
              $ref: '#/definitions/OAuth2Error'
          403:
            description: Access denied
            schema:
              $ref: '#/definitions/OAuth2Error'
          500:
            description: An unexpected service error occurred
            schema:
              $ref: "#/definitions/Error"
      security:
      - AccessToken:
        - dtf_read
  /api/v1/user_tests:
    get:
      tags:
      - DTF
      summary: >
        Get the user tests.
      operationId: getUserTests
      responses:
        200:
          description: The user tests object.
          schema:
            $ref: '#/definitions/UserTests'
        401:
          description: Bad or expired token
          schema:
            $ref: '#/definitions/OAuth2Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/OAuth2Error'
        500:
          description: An unexpected service error occurred
          schema:
            $ref: "#/definitions/Error"
      security:
      - AccessToken:
        - dtf_read
  /api/v1/modules:
    get:
      tags:
      - DTF
      summary: >
        Get the modules.
      operationId: getModules
      responses:
        200:
          description: The modules object.
          schema:
            $ref: '#/definitions/Modules'
        401:
          description: Bad or expired token
          schema:
            $ref: '#/definitions/OAuth2Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/OAuth2Error'
        500:
          description: An unexpected service error occurred
          schema:
            $ref: "#/definitions/Error"
      security:
      - AccessToken:
        - dtf_read
  /api/v1/modules/{id}/:
    get:
      tags:
      - DTF
      summary: >
        Get the requested module.
      operationId: getModule
      parameters:
      - name: id
        in: path
        description: The module id.
        required: true
        type: string
      responses:
        200:
          description: The module object.
          schema:
            $ref: '#/definitions/ModuleDetail'
        401:
          description: Bad or expired token
          schema:
            $ref: '#/definitions/OAuth2Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/OAuth2Error'
        409:
          description: The requested module is unavailable.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: An unexpected service error occurred
          schema:
            $ref: "#/definitions/Error"
      security:
      - AccessToken:
        - dtf_read
  /api/v1/modules/{id}/artifacts:
    get:
      tags:
      - DTF
      summary: >
        Get the requested module's artifacts.
      operationId: getModuleArtifacts
      parameters:
      - name: id
        in: path
        description: The module id.
        required: true
        type: string
      responses:
        200:
          description: The module artifacts object.
          schema:
            $ref: '#/definitions/Artifacts'
        401:
          description: Bad or expired token
          schema:
            $ref: '#/definitions/OAuth2Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/OAuth2Error'
        409:
          description: The requested module id is unavailable.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: An unexpected service error occurred
          schema:
            $ref: "#/definitions/Error"
      security:
      - AccessToken:
        - dtf_read
  /api/v1/modules/{id}/report:
    get:
      tags:
      - DTF
      summary: >
        Get the requested module's reports.
      operationId: getModuleReport
      parameters:
      - name: id
        in: path
        description: The module id.
        required: true
        type: string
      responses:
        200:
          description: The module report.
          schema:
            $ref: '#/definitions/Reports'
        401:
          description: Bad or expired token
          schema:
            $ref: '#/definitions/OAuth2Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/OAuth2Error'
        409:
          description: The requested module id is unavailable.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: An unexpected service error occurred
          schema:
            $ref: "#/definitions/Error"
      security:
      - AccessToken:
        - dtf_read
  /api/v1/modules/{id}/report_print:
    get:
      tags:
      - DTF
      summary: >
        Get the requested module's printable reports.  Note: this returns an html page supported?
      operationId: getModuleReportPrint
      parameters:
      - name: id
        in: path
        description: The module id.
        required: true
        type: string
      responses:
        200:
          description: html page return not supported?
        401:
          description: Bad or expired token
          schema:
            $ref: '#/definitions/OAuth2Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/OAuth2Error'
        409:
          description: The requested module id is unavailable.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: An unexpected service error occurred
          schema:
            $ref: "#/definitions/Error"
      security:
      - AccessToken:
        - dtf_read
  /api/v1/test_plans:
    get:
      tags:
      - DTF
      summary: >
        Get the test plans.
      operationId: getTestPlans
      responses:
        200:
          description: The test plans object.
          schema:
            $ref: '#/definitions/TestPlans'
        401:
          description: Bad or expired token
          schema:
            $ref: '#/definitions/OAuth2Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/OAuth2Error'
        500:
          description: An unexpected service error occurred
          schema:
            $ref: "#/definitions/Error"
      security:
      - AccessToken:
        - dtf_read
  /api/v1/test_plans/{plan}/:
    get:
      tags:
      - DTF
      summary: >
        Get the requested test plan.
      operationId: getTestPlan
      parameters:
      - name: plan
        in: path
        description: The plan primary key.
        required: true
        type: string
      responses:
        200:
          description: The test plan object.
          schema:
            $ref: '#/definitions/TestPlanDetail'
        401:
          description: Bad or expired token
          schema:
            $ref: '#/definitions/OAuth2Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/OAuth2Error'
        409:
          description: The requested plan is unavailable.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: An unexpected service error occurred
          schema:
            $ref: "#/definitions/Error"
      security:
      - AccessToken:
        - dtf_read
  /api/v1/test_plans/{plan}/tests:
    get:
      tags:
      - DTF
      summary: >
        Get the requested test plan's tests.
      operationId: getPlanTests
      parameters:
      - name: plan
        in: path
        description: The plan primary key.
        required: true
        type: string
      responses:
        200:
          description: The test plan's tests object.
          schema:
            $ref: '#/definitions/Tests'
        401:
          description: Bad or expired token
          schema:
            $ref: '#/definitions/OAuth2Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/OAuth2Error'
        409:
          description: The requested plan is unavailable.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: An unexpected service error occurred
          schema:
            $ref: "#/definitions/Error"
      security:
      - AccessToken:
        - dtf_read
  /api/v1/test_plans/{plan}/tests/{id}/:
    get:
      tags:
      - DTF
      summary: >
        Get the requested test plan's given test ID.
      operationId: getPlanTest
      parameters:
      - name: plan
        in: path
        description: The plan primary key.
        required: true
        type: string
      - name: id
        in: path
        description: The test id.
        required: true
        type: string
      responses:
        200:
          description: The test object.
          schema:
            $ref: '#/definitions/Test'
        401:
          description: Bad or expired token
          schema:
            $ref: '#/definitions/OAuth2Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/OAuth2Error'
        409:
          description: The requested plan or test id is unavailable.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: An unexpected service error occurred
          schema:
            $ref: "#/definitions/Error"
      security:
      - AccessToken:
        - dtf_read
  /api/v1/versions:
    get:
      tags:
      - DTF
      summary: >
        Get the versions.
      operationId: getVersions
      responses:
        200:
          description: The versions object.
          schema:
            $ref: '#/definitions/Versions'
        401:
          description: Bad or expired token
          schema:
            $ref: '#/definitions/OAuth2Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/OAuth2Error'
        500:
          description: An unexpected service error occurred
          schema:
            $ref: "#/definitions/Error"
      security:
      - AccessToken:
        - dtf_read
  /api/v1/report_versions:
    get:
      tags:
      - DTF
      summary: >
        Get the report versions.  Note: this returns an html page supported?
      operationId: getReportVersions
      responses:
        200:
          description: The report versions object. Supported?
        401:
          description: Bad or expired token
          schema:
            $ref: '#/definitions/OAuth2Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/OAuth2Error'
        500:
          description: An unexpected service error occurred
          schema:
            $ref: "#/definitions/Error"
      security:
      - AccessToken:
        - dtf_read
  /api/v1/report_descriptions:
    get:
      tags:
      - DTF
      summary: >
        Get the report descriptions.  Note: this returns an html page supported?
      operationId: getReportDescriptions
      responses:
        200:
          description: The report descriptions object.  Supported?
        401:
          description: Bad or expired token
          schema:
            $ref: '#/definitions/OAuth2Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/OAuth2Error'
        500:
          description: An unexpected service error occurred
          schema:
            $ref: "#/definitions/Error"
      security:
      - AccessToken:
        - dtf_read
  /api/v1/report_test_plans:
    get:
      tags:
      - DTF
      summary: >
        Get the report test plans.  Note: this returns an html page supported?
      operationId: getReportTestPlans
      responses:
        200:
          description: The version 1 report test plans object.  Supported?
        401:
          description: Bad or expired token
          schema:
            $ref: '#/definitions/OAuth2Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/OAuth2Error'
        500:
          description: An unexpected service error occurred
          schema:
            $ref: "#/definitions/Error"
      security:
      - AccessToken:
        - dtf_read
  /api/v2/report_test_plans:
    get:
      tags:
      - DTF
      summary: >
        Get the report test plans.  Note: this returns an html page supported?
      operationId: getReportTestPlans2
      responses:
        200:
          description: The version 2 report test plans object.  Supported?
        401:
          description: Bad or expired token
          schema:
            $ref: '#/definitions/OAuth2Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/OAuth2Error'
        500:
          description: An unexpected service error occurred
          schema:
            $ref: "#/definitions/Error"
      security:
      - AccessToken:
        - dtf_read
  /api/v1/instances:
    get:
      tags:
      - DTF
      summary: >
        Get the instances.
      operationId: getInstances
      responses:
        200:
          description: The instances object.
          schema:
            $ref: '#/definitions/Instances'
        401:
          description: Bad or expired token
          schema:
            $ref: '#/definitions/OAuth2Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/OAuth2Error'
        500:
          description: An unexpected service error occurred
          schema:
            $ref: "#/definitions/Error"
      security:
      - AccessToken:
        - dtf_read
  /api/v1/instance/{id}/:
    get:
      tags:
      - DTF
      summary: >
        Get the requested instance ID.
      operationId: getInstance
      parameters:
      - name: id
        in: path
        description: The instance id.
        required: true
        type: string
      responses:
        200:
          description: The instance object.
          schema:
            $ref: '#/definitions/Instance'
        401:
          description: Bad or expired token
          schema:
            $ref: '#/definitions/OAuth2Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/OAuth2Error'
        409:
          description: The requested instance id is unavailable.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: An unexpected service error occurred
          schema:
            $ref: "#/definitions/Error"
      security:
      - AccessToken:
        - dtf_read
  /api/v1/template/{id}/:
    get:
      tags:
      - DTF
      summary: >
        Get the requested template ID.
      operationId: getTemplate
      parameters:
      - name: id
        in: path
        description: The instance id.
        required: true
        type: string
      responses:
        200:
          description: The template object.
          schema:
            $ref: '#/definitions/Template'
        401:
          description: Bad or expired token
          schema:
            $ref: '#/definitions/OAuth2Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/OAuth2Error'
        409:
          description: The requested template id is unavailable.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: An unexpected service error occurred
          schema:
            $ref: "#/definitions/Error"
      security:
      - AccessToken:
        - dtf_read
  /api/v1/artifacts/untested:
    get:
      tags:
      - DTF
      summary: >
        Get the untested artifacts
      operationId: getUntestedArtifacts
      responses:
        200:
          description: The untested artifacts object.
          schema:
            $ref: '#/definitions/UntestedArtifacts'
        401:
          description: Bad or expired token
          schema:
            $ref: '#/definitions/OAuth2Error'
        403:
          description: Access denied
          schema:
            $ref: '#/definitions/OAuth2Error'
        500:
          description: An unexpected service error occurred
          schema:
            $ref: "#/definitions/Error"
      security:
      - AccessToken:
        - dtf_read

securityDefinitions:
  AccessToken:
    type: oauth2
    authorizationUrl: https://cstkit.com/oauth2/authorize
    flow: implicit
    scopes:
      dtf_read: >
        FIXME /metadata GET, /metadata/{keyspace} GET and /metadata/{keyspace}/{metadataID} GET.  Also required with all metadata_write required endpoints.
      dtf_write: >
        FIXME /metadata/{keyspace} POST, /metadata/{keyspace}/{metadataID} PUT and /metadata/{keyspace}/{metadataID} DELETE.
definitions:
  Error:
    type: object
    properties:
      errorCode:
        type: string
      errorDescription:
        type: string
  OAuth2Error:
    type: object
    properties:
      error:
        type: string
      error_description:
        type: string
      error_uri:
        type: string

  Statistics:
    type: object
    properties:
      module_count:
        type: integer
        description: The number of modules
        format: int32
      test_plan_count:
        type: integer
        description: The number of test plans
      test_count:
        type: integer
        description: The number of tests
        format: int32
      artifact_count:
        type: integer
        description: The number of artifacts
        format: int32
      ti_count:
        type: integer
        description: The number of test instances
        format: int32
      ti_pending:
        type: integer
        description: The number of pending test instances
        format: int32
      ti_running:
        type: integer
        description: The number of running test instances
      untested_module_count:
        type: integer
        description: The number of untested modules
        format: int32
  RunRates:
    type: object
    properties:
      from:
        type: integer
        format: int64
        description: >
          The starting date/time in seconds.  Defaults to current time minus one week.
      to:
        type: integer
        format: int64
        description: >
          The ending date/time in seconds.  Defaults to current time.
      bucket:
        type: integer
        format: int64
        description: The modulus to apply to and subtract from the 'from' and 'to' values.  Defaults to 3600 (1 hour).
      labels:
        type: array
        items:
          type: string
      starting:
        $ref: '#/definitions/RunRatesStructure'
      running:
        $ref: '#/definitions/RunRatesStructure'
      complete:
        $ref: '#/definitions/RunRatesStructure'

  RunRatesStructure:
    type: object
    properties:
      options:
        type: object
        description: The starting/running/complete->options structure.  Always empty in JavaScript implementation thus do not know its possible structure.
      data:
        type: object
        description: The starting/running/complete->data structure.
        properties:
          labels:
            type: array
            items:
              type: string
          datasets:
            type: array
            items:
              type: object
              description: The starting/running/complete->data->datasets array
              properties:
                data:
                  type: array
                  items:
                    type: integer
                    format: int8
  UserTests:
    type: array
    description: List of user tests
    items:
      $ref: '#/definitions/UserTest'

  UserTest:
    type: object
    description: Test instance ID and run instance ID
    properties:
      pk_test_instance:
        type: integer
        format: int64
        description: The test instance ID
      pk_run:
        type: integer
        format: int64
        description: The run ID

  Modules:
    type: array
    description: List of modules
    items:
      $ref: '#/definitions/Module'
  Module:
    type: object
    properties:
      pk_module:
        type: integer
        format: int64
        description: The module ID.
      organization:
        type: string
        description: The organization that owns the module.
      name:
        type: string
        description: The name of the module.
      attributes:
        type: string
        description: a set of key-value pairs providing additional information about a module.
      version:
        type: string
        description: The version of the module.
      sequence:
        type: string
        description: The sequence of the module, used in addition to the version in order to differentiate versions of a module. Sequences are ordered alphabetically, with the latest being the most recent.
      tests:
        type: integer
        format: int32
        description: The number of tests.
      plans:
        type: integer
        format: int32
        description: The number of plans.
  ModuleDetail:
    type: object
    properties:
        module:
          type: object
          properties:
            pk_module:
              type: integer
              format: int64
              description: The module ID.
            organization:
              type: string
              description: The organization that owns the module.
            name:
              type: string
              description: The name of the module.
            version:
              type: string
              description: The version of the module.
            attributes:
              type: string
              description: a set of key-value pairs providing additional information about a module.
            scheduled_release:
              type: integer
              format: int64
              description: The scheduled release date.
            actual_release:
              type: integer
              format: int64
              description: The actual release date.
  Artifacts:
    type: array
    items:
        $ref: '#/definitions/Artifact'
  Artifact:
    type: object
    properties:
      pk_artifact:
        type: integer
        format: int64
        description: The artifact ID.
      name:
        type: string
        description: The artifact name.
      configuration:
        type: string
        description: The artifact configuration.
      derived_from_artifact:
        type: integer
        format: int64
        description: The artifact this is derived from.
      merged_from_module:
        type: string
        description: The artifact this was merged from.
      tests:
        type: integer
        format: int32
        description: The number of artifact tests.
      plans:
        type: integer
        format: int64
        description: The number of artifact plans.

  Reports:
    type: array
    items:
      $ref: '#/definitions/Report'
    description: The requested module's report list.

  Report:
    type: object
    properties:
      pk_test_plan:
        type: integer
        format: int64
        description: The test plan ID.
      pk_test:
        type: integer
        format: int64
        description: The test ID.
      pk_test_instance:
        type: integer
        format: int64
        description: The test instance ID.
      description:
        type: string
        description: The test report description.
      modules:
        type: string
        description: The test report description.
      result:
        type: boolean
        description: The test result, pass/fail.
      end_time:
        type: integer
        format: int64
        description: Test end timestamp.

  TestPlans:
    type: array
    items:
      $ref: '#/definitions/TestPlan'
    description: The list of test plans.

  TestPlan:
    type: object
    properties:
      pk_test_plan:
        type: integer
        format: int64
        description: The test plan ID.
      name:
        type: string
        description: the test plan's name.
      description:
        type: string
        description: The test plan's description.

  TestPlanDetail:
    type: object
    properties:
      plan:
        $ref: '#/definitions/TestPlan'
      tests:
        type: array
        items:
          $ref: '#/definitions/Test'
  Test:
    type: object
    properties:
      pk_test:
        type: integer
        format: int64
        description: The test ID.
      fk_test_plan:
        type: integer
        format: int64
        description: The test plan ID.
      name:
        type: string
        description: The test name.
      description:
        type: string
        description: the test description.
      script:
        type: string
        description: The script to run the test.

  Tests:
    type: array
    items:
      $ref: '#/definitions/Test'


  Versions:
    type: array
    items:
      $ref: '#/definitions/Version'

  Version:
    type: object
    properties:
      pk_module:
        type: integer
        format: int64
        description: The associated module ID.
      version:
        type: string
        description: The modules version.
      scheduled_release:
        type: integer
        format: int64
        description: The scheduled release date.
      actual_release:
        type: integer
        format: int64
        description: The actual release date.
  Instances:
    type: object
    properties:
      version:
        type: string
        description: The instances
  Instance:
    type: object
    properties:
      version:
        type: string
        description: The instance
  Template:
    type: object
    properties:
      version:
        type: string
        description: The template
  UntestedArtifacts:
    type: object
    properties:
      version:
        type: string
        description: The untested artifacts
